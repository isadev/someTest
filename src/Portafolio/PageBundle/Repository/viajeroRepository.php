<?php

namespace Portafolio\PageBundle\Repository;

/**
 * viajeroRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class viajeroRepository extends BaseRepository
{
    public function getViajero($cedula, $obj = false)
    {
        if (!$obj) {
            return $this->createQueryBuilder('v')
                ->where('v.cedula = :cedula
            ')
                ->setParameters(array('cedula' => $cedula))
                ->getQuery()
                ->getArrayResult();
        }
        return $this->createQueryBuilder('v')
            ->where('v.cedula = :cedula
            ')
            ->setParameters(array('cedula' => $cedula))
            ->getQuery()
            ->getResult();
    }

    public function updateDataViajero($data)
    {
//        delete from mytable where mytable.fieldone_id = :fieldoneid and mytable.fieldtwo_id = :fieldtwoid
        if ( isset($data['cedula_search']) ) {
            $sql = "update viajero set ";
            $where = " where id = (select id from viajero where cedula = '" . $data['cedula_search'] . "')";
            $updateCedula = isset($data['cedula']) ? "cedula = '" . $data['cedula'] . "' " : null;
            $updateName = isset($data['nombre']) ? "nombre = '" . $data['nombre'] . "' " : null;
            $updateTelefono = isset($data['telefono']) ? "telefono = " . $data['telefono'] : null;
            $updateDireccion = isset($data['direccion ']) ? "direccion = '" . $data['direccion '] . "' " : null;

            $set = [];
            array_push($set, $updateName);
            array_push($set, $updateCedula);
            array_push($set, $updateTelefono);
            array_push($set, $updateDireccion);

            foreach ($set as $cadena) {
                if (!is_null($cadena))
                    $sql = $sql . $cadena . ",";
            }
            $sql = rtrim($sql, ',');
            $sql = $sql . $where;

//        $params = array('fieldoneid'=>$fieldoneid, 'fieldtwoid'=>$fieldtwoid);

            $em = $this->getEntityManager();
            $stmt = $em->getConnection()->prepare($sql);
            $stmt->execute(/*$params*/);
            return $stmt->rowCount();
        }
    }
}
